@page "/conectar"
@using fisioClin.Models
@inject NavigationManager Navigation
@inject fisioClin.Configs.Conexao Conexao

<div class="login-container">
    <div class="left-side">
        <div class="logo-circle fancy-logo">FC</div>
        <div class="brand-name">FISIOCLIN</div>
        <div class="subtitle">FISIOTERAPIA</div>
    </div>

    <div class="right-side">
        <EditForm Model="@usuario" OnValidSubmit="@LoginUsuario">
            <h2>LOGIN</h2>

            <label for="cpf">CPF</label>
            <InputText id="cpf" @bind-Value="usuario.Cpf" class="form-control" />

            <label for="senha">Senha</label>
            <InputText id="senha" type="password" @bind-Value="usuario.Senha" class="form-control" />

            @if (!string.IsNullOrEmpty(mensagem))
            {
                <div class="alert alert-danger mt-2">@mensagem</div>
            }

            <div class="btn-group mt-3">
                <button type="reset" class="btn cancel-btn">Cancelar</button>
                <button type="submit" class="btn confirm-btn">Confirmar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UsuarioLogin usuario = new();
    private string mensagem = "";

    private void LoginUsuario()
    {
        try
        {
            var loginDao = new LoginDAO(Conexao);
            bool sucesso = loginDao.VerificarLogin(usuario.Cpf, usuario.Senha);

            if (sucesso)
            {
                Navigation.NavigateTo("/menu"); // vai para página principal
            }
            else
            {
                mensagem = "CPF ou senha incorretos. Tente novamente.";
            }
        }
        catch (Exception ex)
        {
            mensagem = $"Erro ao conectar: {ex.Message}";
        }
    }

    public class UsuarioLogin
    {
        public string Cpf { get; set; } = "";
        public string Senha { get; set; } = "";
    }
}